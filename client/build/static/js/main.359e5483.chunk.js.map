{"version":3,"sources":["components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/API.js","components/Saved/index.js","components/Nav/index.js","pages/Save.js","components/Form/index.js","components/Search/index.js","pages/Search.js","App.js","registerServiceWorker.js","index.js"],"names":["Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","components_Jumbotron","role","aria-label","API","getGoogleSearchBooks","query","axios","get","getBooks","getBook","id","deleteBook","delete","saveBook","savedBooks","post","Saved","props","Fragment","savedbook","title","key","_id","src","image","alt","author","description","href","link","target","rel","onClick","handleDeleteButton","Nav","type","data-toggle","data-target","aria-controls","aria-expanded","window","location","includes","SaveBook","state","then","res","_this","componentDidMount","catch","err","console","log","_this2","this","setState","data","components_Nav","components_Saved","Component","Form","value","search","name","placeholder","onChange","handleInputChange","handleFormSubmit","Search","books","book","event","handleSavedButton","buttonText","SearchBooks","error","message","preventDefault","items","Error","results","result","volumeInfo","authors","imageLinks","thumbnail","infoLink","filter","Object","objectSpread","components_Form","components_Search","App","react_router_dom","react_router","exact","path","component","Save","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.359e5483.chunk.js","sourcesContent":["import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      <h1 className=\"text-white pt-5 jumboTitle\">Google Books</h1>\n      <h3 className=\"text-white pt-5 jumboText\">Find and Save Books of Interest</h3>\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;","// sampleBook: function(){\n//   return axios.get(\n//     \"https://www.googleapis.com/books/v1/volumes?q=prideandprejudice\" +\n       \n//       \"&key=\" + process.env.REACT_APP_GOOGLE_BOOKS_QUEENS\n//   )\n// },\n\nimport axios from \"axios\";\n\nexport default {\n    // Get book from google search \n    getGoogleSearchBooks: function(query) {\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\n    },\n\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(savedBooks) {\n    return axios.post(\"/api/books\", savedBooks);\n  }\n};\n\n\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Saved = (props) => {\n  return (\n    <>\n      <div className=\"searchContainer\">\n          {props.savedBooks.map((savedbook) => {\n            return (\n            <div className=\"card mb-3\">\n              <div className=\"row no-gutters\" \n                   id={savedbook.title}\n                  key={savedbook._id}>\n                <div className=\"col-sm-3\">\n                <img \n                  key\n                  src={savedbook.image} \n                  alt={savedbook.title} \n                  className=\"img-fluid card-image mt-3\"\n                  />\n                </div>\n                <div className=\"col-sm-9\">\n                  <div className=\"card-body\">\n                    <h3 className=\"card-title\">{savedbook.title}</h3>\n                    <h4 className=\"card-text\">Author: {savedbook.author}</h4>\n                    <h6 className=\"card-text\">{savedbook.description}</h6>\n                    <a href={savedbook.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    More details...\n                    </a>\n                  </div>\n                </div>\n\n                <div className = \"row btnRow\">\n                <a href=\"/\">\n                <button className=\"backToSearchBtn btn btn-light viewBtn ml-auto mr-2\">\n                    Back to Search Page\n                  </button>\n                </a>\n\n                <button\n                  className=\"saveBook btn btn-light mr-3\"\n                  id={savedbook._id}\n                  onClick={() => props.handleDeleteButton(savedbook._id)}\n                >\n                  Delete Book\n                </button>\n                </div>\n                </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Saved;\n","import React from \"react\";\nimport { Container } from \"../Grid\";\nimport \"./style.css\";\n\nfunction Nav() {\n  return (\n\n    <nav className=\"navbar navbar-expand-lg navbar-dark\">\n      <Container>\n      <a className=\"navbar-brand\" href=\"/\">\n        GOOGLE BOOKS\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon text-white\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav d-flex  ml-auto mt-2 mt-lg-0\">\n          {!window.location.href.includes(\"saved\") ? (\n            \"\"\n          ) : (\n          <li className=\"nav-item\" id=\"home\">\n            <a className=\"nav-link mr-4\" href=\"/\" id=\"btnSearch\">\n              Home\n            </a>\n          </li>\n          )}\n           {window.location.href.includes(\"/saved\") ? (\n            \"\"\n          ) : (\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/saved\" id=\"btnSaved\">\n              View Saved Books\n            </a>\n          </li>\n          )}\n        </ul>\n      </div>\n      </Container>\n    </nav>\n    \n  );\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container } from \"../components/Grid\";\nimport Saved from \"../components/Saved\";\nimport Nav from \"../components/Nav\";\n\nclass SaveBook extends Component {\n  state = {\n    savedBooks: [],\n  };\n\n  //get all books saved to the database\n  componentDidMount() {\n    API.getBooks()\n      .then((res) => this.setState({ savedBooks: res.data }))\n      .catch((err) => console.log(err));\n  }\n\n  //delete book by id\n  handleDeleteButton = (id) => {\n    API.deleteBook(id)\n      .then((res) => this.componentDidMount())\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <>\n      <Nav/>\n        <Jumbotron/>\n\n        <Container>\n          <Saved\n            savedBooks={this.state.savedBooks}\n            handleDeleteButton={this.handleDeleteButton}\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default SaveBook;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Form = (props) => {\n  return (\n    <form>\n      <div className=\"form-group row\">\n        <label className=\"BookSearchLabel\">\n          <h2 className=\"searchTitle ml-5\">Enter a Book Title or Author Name</h2>\n        </label>\n      </div>\n      <div className=\"form-group row\">\n        <input\n          className=\"form-control mx-auto input\"\n          value={props.search}\n          type=\"text\"\n          name=\"searchBook\"\n          placeholder=\"Pride & Prejudice\"\n          onChange={props.handleInputChange}\n        />\n      </div>\n      <div className=\"form-group row col-sm-12 justify-content-end\">\n        <button\n          type=\"submit\"\n          className=\"btn btn-light submitBtn mb-3 mr-2\"\n          onClick={props.handleFormSubmit}\n        >\n          Search\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Search = (props) => {\n  return (\n    <>\n      <div className=\"searchContainer\">\n        {props.books.map((book) => {\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"row no-gutters\">\n                <div className=\"col-sm-3\">\n                  <img \n                  key\n                  src={book.image} \n                  alt={book.title} \n                  className=\"img-fluid card-image mt-3\"\n                  />\n                </div>\n                <div className=\"col-sm-9\">\n                  <div className=\"card-body\">\n                    <h3 className=\"card-title\">{book.title}</h3>\n                    <h4 className=\"card-text\">Written by {book.author}</h4>\n                    <h6 className=\"card-text\">{book.description}</h6>\n                    <a href={book.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    More details...\n                    </a>\n                  </div>\n                </div>\n                \n                <button\n                  className=\"saveBook btn btn-light ml-auto mr-2\"\n                  id={book.id} \n                  onClick={(event) => props.handleSavedButton(event)}\n                > {book.buttonText}\n                </button>\n\n                <a href=\"/saved\">\n                <button className=\"viewSavedBtn btn btn-light ml-auto mr-3\">\n                View Saved Books\n                </button>\n                </a>\n\n              </div>\n            </div>\n            \n          );\n        })}\n      </div>\n    </>\n  );\n};\nexport default Search;\n\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport Form from \"../components/Form\";\nimport Search from \"../components/Search\";\nimport Nav from \"../components/Nav\";\n// import Footer from \"../components/Footer\"\n\nclass SearchBooks extends Component {\n  //initial state\n  state = {\n    search: \"Pride & Prejudice\",\n    books: [],\n    error: \"\",\n    message: \"\",\n  };\n\n  //function for search bar\n  handleInputChange = (event) => {\n    this.setState({ search: event.target.value });\n  };\n\n  //function for submit button on search form\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    // once it clicks it connects to the google book api with the search value\n    API.getGoogleSearchBooks(this.state.search)\n      .then((res) => {\n        if (res.data.items === \"error\") {\n          throw new Error(res.data.items);\n        } else {\n          // store response in a array\n          let results = res.data.items;\n          //map through array\n          results = results.map((result) => {\n            //store each book in a new object\n            result = {\n              key: result.id,\n              id: result.id,\n              title: result.volumeInfo.title,\n              author: result.volumeInfo.authors,\n              description: result.volumeInfo.description,\n              image: result.volumeInfo.imageLinks.thumbnail,\n              link: result.volumeInfo.infoLink,\n              buttonText: \"Save Book\"\n            };\n            return result;\n          });\n          // reset state\n          this.setState({ books: results, error: \"\" });\n        }\n      })\n      .catch((err) => this.setState({ error: err.items }));\n  };\n\n  handleSavedButton = (event) => {\n    // console.log(event)\n    event.preventDefault();\n    console.log(this.state.books);\n    console.log(event.target.id);\n    let savedBooks = this.state.books.filter(\n      (book) => book.id === event.target.id\n    );\n    savedBooks = savedBooks[0];\n    console.log(savedBooks);\n    API.saveBook(savedBooks)\n      .then(this.setState({ books: this.state.books.map(book=>{\n        if (book.id === event.target.id){\n          return {\n            ...book, buttonText: \"Saved!\"\n          }\n        } else {\n          return book;\n        }\n      })\n     }))\n      .catch((err) => console.log(\"ERROR\", err));\n  };\n  render() {\n    return (\n      <>\n      <Nav/>\n        <Jumbotron/>\n        <Container>\n          <Row>\n            <Col size=\"12\">\n              <Form\n                handleFormSubmit={this.handleFormSubmit}\n                handleInputChange={this.handleInputChange}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <br></br>\n        <Container>\n          <Search\n            books={this.state.books}\n            handleSavedButton={this.handleSavedButton}\n          />\n        </Container>\n        {/* <Footer/> */}\n      </>\n    );\n  }\n}\n\nexport default SearchBooks;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Save from \"./pages/Save\";\nimport Search from \"./pages/Search\"\nimport \"./App.css\"\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/saved\" component={Save} />\n          <Route exact path=\"/saved/:id\" component={Save} />\n          <Route component={NoMatch} /> \n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}